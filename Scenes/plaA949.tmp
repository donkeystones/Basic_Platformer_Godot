[gd_scene load_steps=3 format=3 uid="uid://b6xhobjymrlv6"]

[sub_resource type="GDScript" id="GDScript_55gho"]
script/source = "extends CharacterBody2D

const SPEED = 100.0
const JUMP_VELOCITY = -200.0

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/2d/default_gravity\")
@onready var anim = $AnimatedSprite2D;
var direction;

func _physics_process(delta):
	# Add the gravity.
	if not is_on_floor():
		velocity.y += gravity * delta

	# Handle jump.
	if Input.is_action_just_pressed(\"ui_jump\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	direction = Input.get_axis(\"ui_left\", \"ui_right\")
	velocity.x = direction * SPEED
	move_and_slide()

func handle_direction():
	anim.flip_h = (direction == -1);
	

func handle_animations():
	if velocity.y == 0 and direction != 0:
		anim.play(\"walk\");
	elif velocity.y == 0 and direction == 0:
		anim.play(\"idle\");
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_erko4"]
size = Vector2(18, 32)

[node name="Player" type="CharacterBody2D"]
script = SubResource("GDScript_55gho")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, 8)
shape = SubResource("RectangleShape2D_erko4")
